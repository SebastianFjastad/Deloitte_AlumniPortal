@model EventViewModel

@{
    ViewBag.Title = "Edit";
}

<style type="text/css">
    .tab-content {
        margin-top: 15px;
    }
</style>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div class="row form-group">
    @using (Html.BeginForm())
    {
        <h3>Event details</h3>
        <div class="col-sm-6">

            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Event.EventID)

            <div class="form-group">
                @Html.LabelFor(model => model.Event.Title, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Event.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Event.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Event.Description, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(model => model.Event.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Event.LocationName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Event.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.LocationName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Event.From, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Event.From, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.From, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Event.To, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Event.To, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.To, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Event.ContactNumber, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Event.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-xs-12">
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    }

    <ul id="statusTabs" class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#attending">Attending</a></li>
        <li><a data-toggle="tab" href="#unresponded">Unresponded</a></li>
        <li><a data-toggle="tab" href="#applications">Applications</a></li>
    </ul>

    <div class="tab-content">
        <div id="attending" class="tab-pane fade in active">
            <table id="attendingDataTable" class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <td>Full Name</td>
                        <td>Number</td>
                        <td>Email</td>
                        <td>Region</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var invite in Model.Event.EventInvites.Where(e => e.Attending))
            {
                    <tr>
                        <td>@invite.User.FirstName @invite.User.LastName</td>
                        <td>@invite.User.PhoneNumber</td>
                        <td>@invite.User.Email</td>
                        <td>@invite.User.Region</td>
                    </tr>
                    }
                </tbody>
            </table>
            <div class="btn btn-primary showEmailForm">Email Attending</div>
        </div>

        <div id="unresponded" class="tab-pane fade">
            <table id="unrespondedDataTable" class="table table-striped table-responsive">
                <thead>
                    <tr>
                        <td>Full Name</td>
                        <td>Number</td>
                        <td>Email</td>
                        <td>Region</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var invite in Model.Event.EventInvites.Where(e => e.Attending == false && !e.IsApplication))
            {
                        <tr>
                            <td>@invite.User.FirstName @invite.User.LastName</td>
                            <td>@invite.User.PhoneNumber</td>
                            <td>@invite.User.Email</td>
                            <td>@invite.User.Region</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="btn btn-primary showEmailForm">Email unresponded</div>
        </div>

        <div id="applications" class="tab-pane fade">
            <div class="form-group">
                <table id="invitesToAcceptTable" class="table table-striped table-responsive" style="height: 200px; overflow-y: scroll">
                    <thead>
                        <tr>
                            <td>Full Name</td>
                            <td>Number</td>
                            <td>Email</td>
                            <td>Region</td>
                            <td>
                                <input id="checkAll" type="checkbox" />
                                <label class="control-label">All</label>
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var invite in Model.Event.EventInvites.Where(e => e.Attending == false && e.IsApplication))
                        {
                            <tr data-id="@invite.User.Id">
                                <td>@invite.User.FirstName @invite.User.LastName</td>
                                <td>@invite.User.PhoneNumber</td>
                                <td>@invite.User.Email</td>
                                <td>@invite.User.Region</td>
                                <td><input type="checkbox" class="checkbox" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="form-group">
                <input id="acceptUsers" type="button" class="btn btn-primary" value="Accept applications" />
            </div>
        </div>
    </div>
</div>

<div class="row">
    @using (Html.BeginForm("SendEmail", "Events", FormMethod.Post, new { @id = "emailForm", @style = "display: none" }))
    {
        <input name="Attending" value="1" style="visibility: hidden" />
        <input name="EventId" value="@Model.Event.EventID" style="visibility: hidden" />

        <div class="form-group">
            @Html.TextBoxFor(s => s.Email.Subject, new { @class = "form-control", @placeholder = "Subject" })
        </div>
        <div class="form-group">
            @Html.TextAreaFor(model => model.Email.Body, new { @placeholder = "Email body" })
        </div>
        <div class="form-group">
            <input type="submit" value="Send Emails" class="btn btn-success" />
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {

            $('#invitesToAcceptTable,#attendingDataTable,#unrespondedDataTable').DataTable({
                "paging": true,
                "ordering": true
            });

            $('#checkAll').click(function(e) {
                var table = $(e.target).closest('table');
                $('td input:checkbox', table).prop('checked', this.checked);
            });

            $('#acceptUsers').on('click', function () {
                var usersToInvite = [];
                $('#invitesToAcceptTable').find('input[type="checkbox"]:checked').each(function () {
                    usersToInvite.push($(this).closest('tr').data('id'));
                });

                //delete the first item in the array because it is the check all checkbox
                usersToInvite.shift();

                if (usersToInvite.length > 0) {
                    if (confirm("Are you sure you want to accept the " + usersToInvite.length + " selected users? ")) {
                        $.ajax({
                            type: "GET",
                            dataType: "json",
                            url: '@Url.Action("AcceptApplication", "Events")',
                            contentType: 'application/json',
                            traditional: true,
                            data: { userIds: usersToInvite, eventId: @Model.Event.EventID },
                            success: function(result) {
                                window.location.reload();
                            }
                        });
                    }
                } else {
                    alert("Please select users to accept");
                }
            });

            $('.showEmailForm').on('click', function () {
                $('#emailForm').toggle();
            });

            $('a[data-toggle="tab"]').on('shown.bs.tab', function(e) {
                if (e.target.hash == '#attending') {
                    $('#attending').val('1');
                }
                if (e.target.hash == '#unresponded') {
                    $('#unresponded').val('2');
                }
                if (e.target.hash == '#applications') {
                    $('#applications').val('3');
                }
            });

            tinyMCE.init({
                mode: "textareas",
                theme: "modern",
                theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
                theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
                theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
                theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,spellchecker,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,blockquote,pagebreak,|,insertfile,insertimage",
                theme_advanced_toolbar_location: "top",
                theme_advanced_toolbar_align: "left",
                theme_advanced_statusbar_location: "bottom",
                theme_advanced_resizing: true
            });
        });
    </script>
}
